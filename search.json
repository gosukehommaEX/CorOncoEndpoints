[{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Advanced Usage and Examples","text":"vignette demonstrates advanced usage CorOncoEndpoints package, including: Working three-endpoint framework (OS + PFS + Response) Understanding implied correlations Sensitivity analyses Complex simulation studies Visualization techniques","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"the-three-endpoint-framework","dir":"Articles","previous_headings":"","what":"The Three-Endpoint Framework","title":"Advanced Usage and Examples","text":"generating three endpoints simultaneously, understanding correlation structure crucial.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"key-insight","dir":"Articles","previous_headings":"The Three-Endpoint Framework","what":"Key Insight","title":"Advanced Usage and Examples","text":"specify: - p: Response probability - hazard_OS: OS hazard rate - hazard_PFS: PFS hazard rate - rho_tte_resp: Correlation OS Response correlation PFS Response automatically determined model structure (Fleischer model).","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"example-understanding-implied-correlations","dir":"Articles","previous_headings":"The Three-Endpoint Framework","what":"Example: Understanding Implied Correlations","title":"Advanced Usage and Examples","text":"","code":"# Parameters p <- 0.4 hazard_OS <- 0.05 hazard_PFS <- 0.08 rho_OS_Response <- 0.3  # Calculate implied PFS-Response correlation rho_PFS_Response <- CorResponsePFS(   p = p,   hazard_OS = hazard_OS,   hazard_PFS = hazard_PFS,   rho_OS_Response = rho_OS_Response,   copula = \"Clayton\" )  cat(\"Specified OS-Response correlation:\", rho_OS_Response, \"\\n\") #> Specified OS-Response correlation: 0.3 cat(\"Implied PFS-Response correlation:\", round(rho_PFS_Response, 3), \"\\n\") #> Implied PFS-Response correlation: 0.243  # Verify with simulation data <- rOncoEndpoints(   nsim = 1000,   n = 200,   p = p,   hazard_OS = hazard_OS,   hazard_PFS = hazard_PFS,   rho_tte_resp = rho_OS_Response,   copula = \"Clayton\" )  # Empirical correlations sim1 <- subset(data, simID == 1) cat(\"\\nEmpirical OS-Response correlation:\",      round(cor(sim1$OS, sim1$Response), 3), \"\\n\") #>  #> Empirical OS-Response correlation: 0.266 cat(\"Empirical PFS-Response correlation:\",      round(cor(sim1$PFS, sim1$Response), 3), \"\\n\") #> Empirical PFS-Response correlation: 0.32"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"correlation-bounds-in-three-endpoint-framework","dir":"Articles","previous_headings":"The Three-Endpoint Framework","what":"Correlation Bounds in Three-Endpoint Framework","title":"Advanced Usage and Examples","text":"feasible range PFS-Response correlation depends response probability hazard rates: Notice PFS-specific bounds typically narrower.","code":"# General TTE-Response bounds (depends only on p) general_bounds <- CorBoundResponseTTE(p = 0.4) cat(\"General TTE-Response bounds:\",      round(general_bounds[1], 3), \"to\", round(general_bounds[2], 3), \"\\n\") #> General TTE-Response bounds: -0.626 to 0.748  # PFS-Response bounds in OS-PFS-Response framework pfs_bounds <- CorBoundResponsePFS(   p = 0.4,   hazard_OS = 0.05,   hazard_PFS = 0.08 ) cat(\"PFS-Response bounds (3-endpoint):\",      round(pfs_bounds[1], 3), \"to\", round(pfs_bounds[2], 3), \"\\n\") #> PFS-Response bounds (3-endpoint): -0.539 to 0.576"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"effect-of-hazard-ratio-on-correlations","dir":"Articles","previous_headings":"Sensitivity Analysis","what":"Effect of Hazard Ratio on Correlations","title":"Advanced Usage and Examples","text":"Interpretation: hazard ratio increases (PFS becomes shorter relative OS), PFS-Response correlation decreases.","code":"# Fixed parameters p <- 0.5 hazard_OS <- 0.04 rho_OS <- 0.3  # Varying hazard ratios hazard_ratios <- seq(1.5, 3.0, by = 0.1) hazard_PFS_vec <- hazard_OS * hazard_ratios  # Calculate implied PFS-Response correlations rho_PFS_vec <- sapply(hazard_PFS_vec, function(h_pfs) {   CorResponsePFS(p, hazard_OS, h_pfs, rho_OS, copula = \"Clayton\") })  # Plot plot(hazard_ratios, rho_PFS_vec, type = \"b\",      xlab = \"Hazard Ratio (PFS/OS)\",      ylab = \"Correlation\",      main = \"Effect of Hazard Ratio on PFS-Response Correlation\",      ylim = range(c(rho_PFS_vec, rho_OS))) abline(h = rho_OS, lty = 2, col = \"red\", lwd = 2) legend(\"topright\",        legend = c(\"PFS-Response correlation\",                    paste0(\"OS-Response correlation (\", rho_OS, \")\")),        lty = c(1, 2), col = c(\"black\", \"red\"), pch = c(1, NA), lwd = c(1, 2))"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"effect-of-response-probability","dir":"Articles","previous_headings":"Sensitivity Analysis","what":"Effect of Response Probability","title":"Advanced Usage and Examples","text":"","code":"# Varying response probabilities p_vec <- seq(0.2, 0.8, by = 0.05)  # Calculate bounds for each p bounds_matrix <- sapply(p_vec, CorBoundResponseTTE)  # Plot plot(p_vec, bounds_matrix[2, ], type = \"l\", col = \"blue\", lwd = 2,      ylim = range(bounds_matrix), xlab = \"Response Probability (p)\",      ylab = \"Correlation Bound\",      main = \"Feasible Correlation Range by Response Probability\") lines(p_vec, bounds_matrix[1, ], col = \"red\", lwd = 2) abline(h = 0, lty = 2, col = \"gray\") legend(\"topright\", legend = c(\"Upper Bound\", \"Lower Bound\"),        col = c(\"blue\", \"red\"), lty = 1, lwd = 2)"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"multi-arm-trial-simulation","dir":"Articles","previous_headings":"Complex Simulation Studies","what":"Multi-Arm Trial Simulation","title":"Advanced Usage and Examples","text":"","code":"# Three-arm trial: Placebo, Low Dose, High Dose data_multi <- rOncoEndpoints(   nsim = 500,   group = c(\"Placebo\", \"Low Dose\", \"High Dose\"),   n = c(100, 100, 100),   p = c(0.2, 0.35, 0.5),   hazard_OS = c(0.08, 0.06, 0.04),   hazard_PFS = c(0.12, 0.10, 0.08),   rho_tte_resp = c(0.2, 0.3, 0.4),   copula = \"Frank\" )  # Validate results validation_multi <- CheckSimResults(   dataset = data_multi,   p = c(Placebo = 0.2, `Low Dose` = 0.35, `High Dose` = 0.5),   hazard_OS = c(Placebo = 0.08, `Low Dose` = 0.06, `High Dose` = 0.04),   hazard_PFS = c(Placebo = 0.12, `Low Dose` = 0.10, `High Dose` = 0.08),   rho_tte_resp = c(Placebo = 0.2, `Low Dose` = 0.3, `High Dose` = 0.4),   copula = \"Frank\" )  # Show median survival times medians <- validation_multi[validation_multi$Endpoint %in%                               c(\"OS_Median\", \"PFS_Median\"),                               c(\"Group\", \"Endpoint\", \"Empirical\", \"Theoretical\")] print(medians, n = Inf) #> # A tibble: 6 × 4 #>   Group     Endpoint   Empirical Theoretical #>   <chr>     <chr>          <dbl>       <dbl> #> 1 Placebo   OS_Median       8.68        8.66 #> 2 Placebo   PFS_Median      5.80        5.78 #> 3 Low Dose  OS_Median      11.6        11.6  #> 4 Low Dose  PFS_Median      6.95        6.93 #> 5 High Dose OS_Median      17.2        17.3  #> 6 High Dose PFS_Median      8.68        8.66"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"time-varying-sample-size","dir":"Articles","previous_headings":"Complex Simulation Studies","what":"Time-Varying Sample Size","title":"Advanced Usage and Examples","text":"","code":"# Simulate different sample sizes per simulation # (Useful for adaptive designs) n_per_sim <- sample(80:120, size = 100, replace = TRUE)  # Generate data with varying n # Note: rOncoEndpoints requires fixed n per group, so we'll # generate multiple datasets  results_list <- lapply(1:10, function(i) {   rOncoEndpoints(     nsim = 1,     n = n_per_sim[i],     p = 0.4,     hazard_OS = 0.05,     rho_tte_resp = 0.3,     copula = \"Clayton\"   ) })  # Combine results data_varying <- do.call(rbind, results_list) table(data_varying$simID) #>  #>   1  #> 967"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"relationship-between-correlation-and-theta","dir":"Articles","previous_headings":"Copula Parameter Exploration","what":"Relationship Between Correlation and Theta","title":"Advanced Usage and Examples","text":"","code":"# For different correlations, calculate copula parameters rho_vec <- seq(0.1, 0.6, by = 0.05) p <- 0.4  theta_clayton <- sapply(rho_vec, function(r) {   CopulaParamResponseTTE(p, r, \"Clayton\") })  theta_frank <- sapply(rho_vec, function(r) {   CopulaParamResponseTTE(p, r, \"Frank\") })  # Plot par(mfrow = c(1, 2)) plot(rho_vec, theta_clayton, type = \"b\", col = \"blue\",      xlab = \"Correlation\", ylab = \"Theta\",      main = \"Clayton Copula: Correlation vs Theta\")  plot(rho_vec, theta_frank, type = \"b\", col = \"red\",      xlab = \"Correlation\", ylab = \"Theta\",      main = \"Frank Copula: Correlation vs Theta\") par(mfrow = c(1, 1))"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"application-1-endpoint-selection-study","dir":"Articles","previous_headings":"Practical Applications","what":"Application 1: Endpoint Selection Study","title":"Advanced Usage and Examples","text":"Compare power different endpoint choices:","code":"# Scenario: Which endpoint provides better power? # Generate data for multiple scenarios  # OS only data_os <- rOncoEndpoints(   nsim = 500,   group = c(\"Treatment\", \"Control\"),   n = c(150, 150),   hazard_OS = c(0.05, 0.07) )  # Response only data_resp <- rOncoEndpoints(   nsim = 500,   group = c(\"Treatment\", \"Control\"),   n = c(150, 150),   p = c(0.4, 0.3) )  # OS + Response data_both <- rOncoEndpoints(   nsim = 500,   group = c(\"Treatment\", \"Control\"),   n = c(150, 150),   p = c(0.4, 0.3),   hazard_OS = c(0.05, 0.07),   rho_tte_resp = c(0.3, 0.2),   copula = \"Clayton\" )  # Calculate effect sizes for each endpoint type # (Analysis code would go here)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"application-2-correlation-impact-study","dir":"Articles","previous_headings":"Practical Applications","what":"Application 2: Correlation Impact Study","title":"Advanced Usage and Examples","text":"correlation structure affect trial outcomes?","code":"# Generate data with different correlation structures correlations <- c(0.1, 0.3, 0.5)  data_list <- lapply(correlations, function(rho) {   rOncoEndpoints(     nsim = 200,     group = \"Treatment\",     n = 100,     p = 0.4,     hazard_OS = 0.05,     rho_tte_resp = rho,     copula = \"Clayton\"   ) })  # Compare variability in endpoints across correlations variances <- sapply(data_list, function(d) {   c(     var_OS = var(d$OS),     var_Response = var(d$Response)   ) })  colnames(variances) <- paste(\"rho =\", correlations) print(round(variances, 3)) #>              rho = 0.1 rho = 0.3 rho = 0.5 #> var_OS         396.565   399.321   391.955 #> var_Response     0.241     0.240     0.240"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"application-3-model-misspecification-study","dir":"Articles","previous_headings":"Practical Applications","what":"Application 3: Model Misspecification Study","title":"Advanced Usage and Examples","text":"happens assume independence data correlated?","code":"# Generate correlated data data_corr <- rOncoEndpoints(   nsim = 1000,   n = 200,   p = 0.4,   hazard_OS = 0.05,   rho_tte_resp = 0.4,   copula = \"Clayton\" )  # Analyze assuming independence vs accounting for correlation # (Statistical analysis code would go here)  # Calculate empirical correlation sim1_corr <- subset(data_corr, simID == 1) cat(\"True correlation:\", 0.4, \"\\n\") #> True correlation: 0.4 cat(\"Empirical correlation:\",      round(cor(sim1_corr$OS, sim1_corr$Response), 3), \"\\n\") #> Empirical correlation: 0.433"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"correlation-structure-visualization","dir":"Articles","previous_headings":"Visualization Techniques","what":"Correlation Structure Visualization","title":"Advanced Usage and Examples","text":"","code":"# Generate data data_viz <- rOncoEndpoints(   nsim = 1,   group = c(\"Treatment\", \"Control\"),   n = c(200, 200),   p = c(0.5, 0.3),   hazard_OS = c(0.04, 0.06),   hazard_PFS = c(0.08, 0.10),   rho_tte_resp = c(0.4, 0.2),   copula = \"Frank\" )  # Scatter plot: OS vs Response by group par(mfrow = c(1, 2)) for (grp in c(\"Treatment\", \"Control\")) {   d <- subset(data_viz, Group == grp)   plot(d$OS, d$Response,         main = paste(grp, \"Group\"),        xlab = \"Overall Survival\",        ylab = \"Response (0/1)\",        pch = 16, col = ifelse(d$Response == 1, \"blue\", \"red\"))   legend(\"topright\",           legend = c(\"Responder\", \"Non-responder\"),          col = c(\"blue\", \"red\"), pch = 16) } par(mfrow = c(1, 1))"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Advanced Usage and Examples","text":"Always validate: Use CheckSimResults() ensure simulations match theory Check bounds: Use CorBoundResponseTTE() specifying correlations Understand three-endpoint model: Remember PFS-Response correlation derived Choose appropriate copula: Clayton positive correlations , Frank flexibility Use adequate simulations: least 1000 simulations stable results Document assumptions: Clearly state hazard rates, correlations, copula choices","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/advanced-usage.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Advanced Usage and Examples","text":"vignette covered: three-endpoint framework implied correlations Sensitivity analyses key parameters Complex simulation study designs Copula parameter exploration Practical applications Visualization techniques theoretical details, see “Theoretical Background” vignette.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to CorOncoEndpoints","text":"CorOncoEndpoints package provides tools generating correlated oncology endpoints clinical trial simulations. vignette introduces basic functionality common use cases.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"why-coroncoendpoints","dir":"Articles","previous_headings":"","what":"Why CorOncoEndpoints?","title":"Introduction to CorOncoEndpoints","text":"oncology clinical trials, often need simulate multiple correlated endpoints: Overall Survival (OS): Time randomization death Progression-Free Survival (PFS): Time randomization progression death Objective Response (Response): Binary indicator tumor response endpoints independent—exhibit natural correlations. example: Patients respond treatment tend longer survival times PFS always ≤ OS (die progressing) Response associated OS PFS CorOncoEndpoints generates realistic simulated data preserves correlation structures.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"example-1-generate-os-and-response","dir":"Articles","previous_headings":"Basic Usage","what":"Example 1: Generate OS and Response","title":"Introduction to CorOncoEndpoints","text":"Let’s start simple example generating correlated OS Response data:","code":"# Generate data for two groups data1 <- rOncoEndpoints(   nsim = 100,                           # 100 simulations   group = c(\"Treatment\", \"Control\"),    # Two treatment groups   n = c(150, 150),                      # Sample size per group   p = c(0.4, 0.3),                      # Response rates   hazard_OS = c(0.05, 0.07),            # Hazard rates for OS   rho_tte_resp = c(0.3, 0.2),           # Correlation between OS and Response   copula = \"Clayton\"                    # Copula family )  # View first few rows head(data1) #>   simID     Group         OS Response #> 1     1 Treatment  6.7816835        0 #> 2     1 Treatment 31.0521872        0 #> 3     1 Treatment 10.5180043        1 #> 4     1 Treatment 42.9146021        1 #> 5     1 Treatment 56.4245855        0 #> 6     1 Treatment  0.9325366        0  # Check dimensions cat(\"Total observations:\", nrow(data1), \"\\n\") #> Total observations: 30000 cat(\"Number of simulations:\", length(unique(data1$simID)), \"\\n\") #> Number of simulations: 100 cat(\"Groups:\", unique(data1$Group), \"\\n\") #> Groups: Treatment Control"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"example-2-all-three-endpoints","dir":"Articles","previous_headings":"Basic Usage","what":"Example 2: All Three Endpoints","title":"Introduction to CorOncoEndpoints","text":"Now let’s generate three endpoints (OS, PFS, Response): Important: generating three endpoints, specify correlation OS Response (rho_tte_resp). correlation PFS Response automatically determined model structure.","code":"data2 <- rOncoEndpoints(   nsim = 100,   group = c(\"Experimental\", \"Standard\"),   n = c(200, 200),   p = c(0.5, 0.35),   hazard_OS = c(0.04, 0.06),   hazard_PFS = c(0.08, 0.10),           # Note: hazard_PFS > hazard_OS   rho_tte_resp = c(0.4, 0.25),          # Correlation between OS and Response   copula = \"Frank\" )  head(data2) #>   simID        Group        OS        PFS Response #> 1     1 Experimental 13.758314 13.7583143        1 #> 2     1 Experimental 38.484101  0.5779209        1 #> 3     1 Experimental 23.023374 23.0233739        1 #> 4     1 Experimental  2.137153  0.9313718        1 #> 5     1 Experimental  8.745343  6.6986000        0 #> 6     1 Experimental 10.339117 10.3391172        1"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"example-3-verify-correlations","dir":"Articles","previous_headings":"Basic Usage","what":"Example 3: Verify Correlations","title":"Introduction to CorOncoEndpoints","text":"Let’s check correlations simulated data:","code":"# For the Experimental group in simulation 1 sim1_exp <- subset(data2, simID == 1 & Group == \"Experimental\")  # Correlation between OS and Response cor_os_resp <- cor(sim1_exp$OS, sim1_exp$Response) cat(\"Correlation (OS, Response):\", round(cor_os_resp, 3), \"\\n\") #> Correlation (OS, Response): 0.423  # Correlation between PFS and Response cor_pfs_resp <- cor(sim1_exp$PFS, sim1_exp$Response) cat(\"Correlation (PFS, Response):\", round(cor_pfs_resp, 3), \"\\n\") #> Correlation (PFS, Response): 0.322  # Correlation between OS and PFS cor_os_pfs <- cor(sim1_exp$OS, sim1_exp$PFS) cat(\"Correlation (OS, PFS):\", round(cor_os_pfs, 3), \"\\n\") #> Correlation (OS, PFS): 0.54  # Verify PFS <= OS constraint cat(\"All PFS <= OS?\", all(sim1_exp$PFS <= sim1_exp$OS), \"\\n\") #> All PFS <= OS? TRUE"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"validation-of-simulation-results","dir":"Articles","previous_headings":"","what":"Validation of Simulation Results","title":"Introduction to CorOncoEndpoints","text":"Use CheckSimResults() validate simulations match theoretical values: Interpretation: Bias: close 0 unbiased methods Relative_Bias: < 5% excellent, < 10% acceptable SE: Standard error estimates across simulations RMSE: Overall accuracy measure","code":"# Generate more simulations for better validation data_val <- rOncoEndpoints(   nsim = 1000,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   p = c(0.4, 0.3),   hazard_OS = c(0.05, 0.07),   rho_tte_resp = c(0.3, 0.2),   copula = \"Clayton\" )  # Validate results validation <- CheckSimResults(   dataset = data_val,   p = c(Treatment = 0.4, Control = 0.3),   hazard_OS = c(Treatment = 0.05, Control = 0.07),   rho_tte_resp = c(Treatment = 0.3, Control = 0.2),   copula = \"Clayton\" )  # Show results print(validation, n = 20) #> # A tibble: 8 × 10 #>   Group     Endpoint Empirical Theoretical     Bias Relative_Bias     SE     MSE #>   <chr>     <chr>        <dbl>       <dbl>    <dbl>         <dbl>  <dbl>   <dbl> #> 1 Treatment OS_Mean     20.0         20     0.0374          0.187 2.00   3.99    #> 2 Treatment OS_Medi…    14.0         13.9   0.0924          0.667 1.96   3.86    #> 3 Treatment Response     0.401        0.4   0.00112         0.280 0.0484 0.00235 #> 4 Treatment Cor_OS_…     0.308        0.3   0.00811         2.70  0.0972 0.00952 #> 5 Control   OS_Mean     14.3         14.3   0.0229          0.161 1.45   2.11    #> 6 Control   OS_Medi…     9.98         9.90  0.0734          0.741 1.43   2.05    #> 7 Control   Response     0.296        0.3  -0.00355        -1.18  0.0455 0.00208 #> 8 Control   Cor_OS_…     0.203        0.2   0.00317         1.59  0.0994 0.00990 #> # ℹ 2 more variables: RMSE <dbl>, Assessment <chr>"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"understanding-correlation-bounds","dir":"Articles","previous_headings":"","what":"Understanding Correlation Bounds","title":"Introduction to CorOncoEndpoints","text":"correlations feasible. Use CorBoundResponseTTE() check feasible ranges: Notice feasible range depends response probability.","code":"# For response probability = 0.4 bounds <- CorBoundResponseTTE(p = 0.4) cat(\"Feasible correlation range:\",      round(bounds[1], 3), \"to\", round(bounds[2], 3), \"\\n\") #> Feasible correlation range: -0.626 to 0.748  # Try different response probabilities p_values <- c(0.2, 0.4, 0.6, 0.8) bounds_matrix <- sapply(p_values, CorBoundResponseTTE) colnames(bounds_matrix) <- paste(\"p =\", p_values) rownames(bounds_matrix) <- c(\"Lower\", \"Upper\") print(round(bounds_matrix, 3)) #>       p = 0.2 p = 0.4 p = 0.6 p = 0.8 #> Lower  -0.446  -0.626  -0.748  -0.805 #> Upper   0.805   0.748   0.626   0.446"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"clayton-copula","dir":"Articles","previous_headings":"Copula Families","what":"Clayton Copula","title":"Introduction to CorOncoEndpoints","text":"Exhibits lower tail dependence model negative correlations (rho > 0 ) Good survival data patients poor outcomes tend poor outcomes across endpoints","code":"# Clayton copula example data_clayton <- rOncoEndpoints(   nsim = 100,   n = 100,   p = 0.4,   hazard_OS = 0.05,   rho_tte_resp = 0.3,   copula = \"Clayton\" )  head(data_clayton) #>   simID  Group         OS Response #> 1     1 Group1  0.9734742        0 #> 2     1 Group1  1.7577495        0 #> 3     1 Group1 16.7348480        1 #> 4     1 Group1 43.1064927        1 #> 5     1 Group1 21.5900391        0 #> 6     1 Group1 61.0736650        0"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"frank-copula","dir":"Articles","previous_headings":"Copula Families","what":"Frank Copula","title":"Introduction to CorOncoEndpoints","text":"Flexible positive negative correlations Symmetric tail behavior general choice","code":"# Frank copula with negative correlation bounds_neg <- CorBoundResponseTTE(p = 0.4) rho_negative <- -0.2  # Must be within bounds  data_frank <- rOncoEndpoints(   nsim = 100,   n = 100,   p = 0.4,   hazard_OS = 0.05,   rho_tte_resp = rho_negative,   copula = \"Frank\" )  # Check negative correlation cor(data_frank[data_frank$simID == 1, ]$OS,      data_frank[data_frank$simID == 1, ]$Response) #> [1] -0.194624"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"use-case-1-power-analysis","dir":"Articles","previous_headings":"Common Use Cases","what":"Use Case 1: Power Analysis","title":"Introduction to CorOncoEndpoints","text":"Generate data different scenarios estimate statistical power:","code":"# Scenario: Treatment vs Control scenarios <- expand.grid(   hazard_ratio = c(0.7, 0.8, 0.9),   response_diff = c(0.1, 0.15, 0.2),   correlation = c(0.2, 0.3, 0.4) )  # For each scenario, generate data and calculate power # (Example code structure - not run)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"use-case-2-sample-size-calculation","dir":"Articles","previous_headings":"Common Use Cases","what":"Use Case 2: Sample Size Calculation","title":"Introduction to CorOncoEndpoints","text":"Determine required sample size detecting treatment effects:","code":"# Generate data with different sample sizes n_values <- c(50, 100, 150, 200)  # For each n, simulate trials and calculate detection rates # (Example code structure - not run)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"use-case-3-trial-design-evaluation","dir":"Articles","previous_headings":"Common Use Cases","what":"Use Case 3: Trial Design Evaluation","title":"Introduction to CorOncoEndpoints","text":"Compare different trial designs (e.g., different endpoints, different copulas):","code":"# Compare Clayton vs Frank copula # Compare OS-only vs OS+Response endpoints # (Example code structure - not run)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Introduction to CorOncoEndpoints","text":"vignette introduced basic functionality CorOncoEndpoints: Generate correlated endpoints rOncoEndpoints() Validate simulations CheckSimResults() Check feasible correlations CorBoundResponseTTE() Choose appropriate copulas (Clayton positive , Frank ) advanced usage, see “Advanced Usage Examples” vignette. theoretical details, see “Theoretical Background” vignette.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/introduction.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Introduction to CorOncoEndpoints","text":"Explore advanced-usage vignette complex scenarios Read theoretical-background vignette understand mathematical framework Check function documentation ?rOncoEndpoints, ?CheckSimResults, etc.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Theoretical Background","text":"vignette provides theoretical foundation CorOncoEndpoints package, covering: Fleischer model OS PFS Copula-based modeling dependence Correlation bounds (Fréchet-Hoeffding) Mathematical derivations","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"model-specification","dir":"Articles","previous_headings":"The Fleischer Model","what":"Model Specification","title":"Theoretical Background","text":"Fleischer model (2009) provides framework modeling dependence overall survival (OS) progression-free survival (PFS). Key Components: Overall Survival (OS): OS∼Exp(λOS)OS \\sim \\text{Exp}(\\lambda_{OS}) Time Progression (TTP): TTP∼Exp(λTTP)TTP \\sim \\text{Exp}(\\lambda_{TTP}) Progression-Free Survival (PFS): PFS=min(OS,TTP)PFS = \\min(OS, TTP) OS TTP independent.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"important-properties","dir":"Articles","previous_headings":"The Fleischer Model","what":"Important Properties","title":"Theoretical Background","text":"Property 1: PFS follows exponential distribution PFS∼Exp(λPFS)PFS \\sim \\text{Exp}(\\lambda_{PFS}) λPFS=λOS+λTTP\\lambda_{PFS} = \\lambda_{OS} + \\lambda_{TTP} Proof: Since PFS=min(OS,TTP)PFS = \\min(OS, TTP) independent exponentials, P(PFS>t)=P(OS>t)⋅P(TTP>t)=e−λOSt⋅e−λTTPt=e−(λOS+λTTP)tP(PFS > t) = P(OS > t) \\cdot P(TTP > t) = e^{-\\lambda_{OS}t} \\cdot e^{-\\lambda_{TTP}t} = e^{-(\\lambda_{OS} + \\lambda_{TTP})t} Property 2: Correlation OS PFS Corr(OS,PFS)=λOSλPFS=λOSλOS+λTTP\\text{Corr}(OS, PFS) = \\frac{\\lambda_{OS}}{\\lambda_{PFS}} = \\frac{\\lambda_{OS}}{\\lambda_{OS} + \\lambda_{TTP}} ensures 0<Corr(OS,PFS)<10 < \\text{Corr}(OS, PFS) < 1 automatically satisfies PFS≤OSPFS \\leq OS.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"median-survival-times","dir":"Articles","previous_headings":"The Fleischer Model","what":"Median Survival Times","title":"Theoretical Background","text":"exponentially distributed time--event variables: Median=log(2)λ\\text{Median} = \\frac{\\log(2)}{\\lambda} Therefore: - Median OS = log(2)λOS\\frac{\\log(2)}{\\lambda_{OS}} - Median PFS = log(2)λPFS\\frac{\\log(2)}{\\lambda_{PFS}}","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"what-is-a-copula","dir":"Articles","previous_headings":"Copula-Based Dependence Modeling","what":"What is a Copula?","title":"Theoretical Background","text":"copula function links marginal distributions joint distribution. two random variables XX YY marginal distributions FXF_X FYF_Y, copula CC satisfies: FX,Y(x,y)=C(FX(x),FY(y))F_{X,Y}(x,y) = C(F_X(x), F_Y(y))","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"why-copulas","dir":"Articles","previous_headings":"Copula-Based Dependence Modeling","what":"Why Copulas?","title":"Theoretical Background","text":"Copulas allow us : Separate marginal behavior dependence structure Model non-linear dependencies Handle different types tail dependence","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"clayton-copula","dir":"Articles","previous_headings":"Copula-Based Dependence Modeling","what":"Clayton Copula","title":"Theoretical Background","text":"Definition: C(u,v;θ)=(u−θ+v−θ−1)−1/θ,θ>0C(u, v; \\theta) = (u^{-\\theta} + v^{-\\theta} - 1)^{-1/\\theta}, \\quad \\theta > 0 Properties: Lower tail dependence: λL=2−1/θ\\lambda_L = 2^{-1/\\theta} Upper tail independence: λU=0\\lambda_U = 0 Kendall’s tau: τ=θ/(θ+2)\\tau = \\theta / (\\theta + 2) model negative dependence (requires θ>0\\theta > 0) Conditional Distribution: C2|1(v|u;θ)=∂C(u,v;θ)∂u=u−θ−1(u−θ+v−θ−1)−1/θ−1C_{2|1}(v|u; \\theta) = \\frac{\\partial C(u,v;\\theta)}{\\partial u} = u^{-\\theta-1}(u^{-\\theta} + v^{-\\theta} - 1)^{-1/\\theta - 1} used generation algorithm.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"frank-copula","dir":"Articles","previous_headings":"Copula-Based Dependence Modeling","what":"Frank Copula","title":"Theoretical Background","text":"Definition: C(u,v;θ)=−1θlog(1+(e−θu−1)(e−θv−1)e−θ−1)C(u, v; \\theta) = -\\frac{1}{\\theta} \\log\\left(1 + \\frac{(e^{-\\theta u} - 1)(e^{-\\theta v} - 1)}{e^{-\\theta} - 1}\\right) Properties: Symmetric: tail dependence (λL=λU=0\\lambda_L = \\lambda_U = 0) Kendall’s tau: τ=1−4θ[1−D1(θ)]\\tau = 1 - \\frac{4}{\\theta}\\left[1 - D_1(\\theta)\\right] D1D_1 Debye function Can model negative dependence (θ\\theta can negative) Conditional Distribution: C2|1(v|u;θ)=(e−θv−1)(e−θ−1)(e−θv−1)+(e−θu−1)(e−θ−1)C_{2|1}(v|u; \\theta) = \\frac{(e^{-\\theta v} - 1)(e^{-\\theta} - 1)}{(e^{-\\theta v} - 1) + (e^{-\\theta u} - 1)(e^{-\\theta} - 1)}","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"fréchet-hoeffding-bounds","dir":"Articles","previous_headings":"Correlation Bounds","what":"Fréchet-Hoeffding Bounds","title":"Theoretical Background","text":"copula CC: max(u+v−1,0)≤C(u,v)≤min(u,v)\\max(u + v - 1, 0) \\leq C(u,v) \\leq \\min(u, v) bounds correspond : Lower bound: Perfect negative dependence (countermonotonic copula) Upper bound: Perfect positive dependence (comonotonic copula)","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"correlation-bounds-for-tte-and-binary-response","dir":"Articles","previous_headings":"Correlation Bounds","what":"Correlation Bounds for TTE and Binary Response","title":"Theoretical Background","text":"time--event variable T∼Exp(λ)T \\sim \\text{Exp}(\\lambda) binary response R∼Bernoulli(p)R \\sim \\text{Bernoulli}(p): Lower Bound: ρlower=−p1−p∫0qpe−λtdt\\rho_{lower} = -\\sqrt{\\frac{p}{1-p}} \\int_0^{q_p} e^{-\\lambda t} dt qpq_p pp-th quantile exponential distribution. Upper Bound: ρupper=1−pp∫qp∞e−λtdt\\rho_{upper} = \\sqrt{\\frac{1-p}{p}} \\int_{q_p}^\\infty e^{-\\lambda t} dt simplify : ρlower=−p1−p(1−p)\\rho_{lower} = -\\sqrt{\\frac{p}{1-p}}(1 - p)ρupper=1−pp⋅p\\rho_{upper} = \\sqrt{\\frac{1-p}{p}} \\cdot p Important: bounds depend pp, λ\\lambda (TTE-Response case).","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"correlation-bounds-for-pfs-and-response","dir":"Articles","previous_headings":"Correlation Bounds","what":"Correlation Bounds for PFS and Response","title":"Theoretical Background","text":"three-endpoint framework (OS + PFS + Response), bounds PFS-Response correlation complex depend pp hazard rates: ρlowerPFS=1−ppλOSλTTP[(1−p)λTTP/λOS−1]\\rho_{lower}^{PFS} = \\sqrt{\\frac{1-p}{p}} \\frac{\\lambda_{OS}}{\\lambda_{TTP}} \\left[(1-p)^{\\lambda_{TTP}/\\lambda_{OS}} - 1\\right] ρupperPFS=p1−pλOSλTTP[1−pλTTP/λOS]\\rho_{upper}^{PFS} = \\sqrt{\\frac{p}{1-p}} \\frac{\\lambda_{OS}}{\\lambda_{TTP}} \\left[1 - p^{\\lambda_{TTP}/\\lambda_{OS}}\\right] λTTP=λPFS−λOS\\lambda_{TTP} = \\lambda_{PFS} - \\lambda_{OS}.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"step-1-generate-uniform-random-variables","dir":"Articles","previous_headings":"Data Generation Algorithm","what":"Step 1: Generate Uniform Random Variables","title":"Theoretical Background","text":"copula-based generation: Generate U1∼Uniform(0,1)U_1 \\sim \\text{Uniform}(0,1) Generate U2∼Uniform(0,1)U_2 \\sim \\text{Uniform}(0,1)","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"step-2-apply-copula-transform","dir":"Articles","previous_headings":"Data Generation Algorithm","what":"Step 2: Apply Copula Transform","title":"Theoretical Background","text":"Use conditional copula transform U2U_2: V=C2|1(U2|U1;θ)V = C_{2|1}(U_2|U_1; \\theta) Now (U1,V)(U_1, V) desired dependence structure.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"step-3-apply-inverse-cdf-transform","dir":"Articles","previous_headings":"Data Generation Algorithm","what":"Step 3: Apply Inverse CDF Transform","title":"Theoretical Background","text":"Transform uniforms target distributions: TTE: T=−1λlog(1−U1)T = -\\frac{1}{\\lambda}\\log(1 - U_1) Response: R=𝟙{V>1−p}R = \\mathbb{1}\\{V > 1 - p\\} 𝟙{⋅}\\mathbb{1}\\{\\cdot\\} indicator function.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"step-4-enforce-pfs-os-constraint","dir":"Articles","previous_headings":"Data Generation Algorithm","what":"Step 4: Enforce PFS ≤ OS Constraint","title":"Theoretical Background","text":"generating three endpoints: Generate OS∼Exp(λOS)OS \\sim \\text{Exp}(\\lambda_{OS}) Generate TTP∼Exp(λTTP)TTP \\sim \\text{Exp}(\\lambda_{TTP}) independently Set PFS=min(OS,TTP)PFS = \\min(OS, TTP) automatically ensures PFS≤OSPFS \\leq OS.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"from-correlation-to-theta","dir":"Articles","previous_headings":"Calculating Copula Parameters","what":"From Correlation to Theta","title":"Theoretical Background","text":"Given desired correlation ρ\\rho TTE Response, need find copula parameter θ\\theta. Clayton Copula: Solve numerically: ρ=Corr(T,R)=fClayton(θ,p,λ)\\rho = \\text{Corr}(T, R) = f_{Clayton}(\\theta, p, \\lambda) using Hoeffding’s formula covariance. Frank Copula: Solve numerically: ρ=Corr(T,R)=fFrank(θ,p,λ)\\rho = \\text{Corr}(T, R) = f_{Frank}(\\theta, p, \\lambda) package implements using numerical optimization (bisection method).","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"bias","dir":"Articles","previous_headings":"Validation Metrics","what":"Bias","title":"Theoretical Background","text":"Bias(θ̂)=E[θ̂]−θ\\text{Bias}(\\hat{\\theta}) = E[\\hat{\\theta}] - \\theta Measures systematic error. close 0 unbiased estimators.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"mean-squared-error-mse","dir":"Articles","previous_headings":"Validation Metrics","what":"Mean Squared Error (MSE)","title":"Theoretical Background","text":"MSE(θ̂)=E[(θ̂−θ)2]=Var(θ̂)+Bias2(θ̂)\\text{MSE}(\\hat{\\theta}) = E[(\\hat{\\theta} - \\theta)^2] = \\text{Var}(\\hat{\\theta}) + \\text{Bias}^2(\\hat{\\theta}) Combines variance bias single measure.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"root-mean-squared-error-rmse","dir":"Articles","previous_headings":"Validation Metrics","what":"Root Mean Squared Error (RMSE)","title":"Theoretical Background","text":"RMSE(θ̂)=MSE(θ̂)\\text{RMSE}(\\hat{\\theta}) = \\sqrt{\\text{MSE}(\\hat{\\theta})} Error measure original scale.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"relative-bias","dir":"Articles","previous_headings":"Validation Metrics","what":"Relative Bias","title":"Theoretical Background","text":"Relative Bias(θ̂)=Bias(θ̂)θ×100%\\text{Relative Bias}(\\hat{\\theta}) = \\frac{\\text{Bias}(\\hat{\\theta})}{\\theta} \\times 100\\% Expresses bias percentage true value.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"derivation-of-corros-pfs","dir":"Articles","previous_headings":"Mathematical Derivations","what":"Derivation of Corr(OS, PFS)","title":"Theoretical Background","text":"Given PFS=min(OS,TTP)PFS = \\min(OS, TTP) OS∼Exp(λ1)OS \\sim \\text{Exp}(\\lambda_1) TTP∼Exp(λ2)TTP \\sim \\text{Exp}(\\lambda_2) independent: E[PFS⋅OS]=E[PFS]⋅E[OS|PFS=OS]⋅P(PFS=OS)+E[PFS]⋅E[OS|PFS<OS]⋅P(PFS<OS)E[PFS \\cdot OS] = E[PFS] \\cdot E[OS|PFS = OS] \\cdot P(PFS = OS) + E[PFS] \\cdot E[OS|PFS < OS] \\cdot P(PFS < OS) integration: Cov(OS,PFS)=1(λ1+λ2)2\\text{Cov}(OS, PFS) = \\frac{1}{(\\lambda_1 + \\lambda_2)^2} since: Var(OS)=1λ12,Var(PFS)=1(λ1+λ2)2\\text{Var}(OS) = \\frac{1}{\\lambda_1^2}, \\quad \\text{Var}(PFS) = \\frac{1}{(\\lambda_1 + \\lambda_2)^2} get: Corr(OS,PFS)=Cov(OS,PFS)Var(OS)⋅Var(PFS)=λ1λ1+λ2\\text{Corr}(OS, PFS) = \\frac{\\text{Cov}(OS, PFS)}{\\sqrt{\\text{Var}(OS) \\cdot \\text{Var}(PFS)}} = \\frac{\\lambda_1}{\\lambda_1 + \\lambda_2}","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"derivation-of-pfs-response-correlation","dir":"Articles","previous_headings":"Mathematical Derivations","what":"Derivation of PFS-Response Correlation","title":"Theoretical Background","text":"three-endpoint framework, correlation PFS Response derived : specified correlation OS Response Fleischer model relationship PFS=min(OS,TTP)PFS = \\min(OS, TTP) copula linking OS Response derivation involves: Cov(PFS,R)=E[PFS⋅R]−E[PFS]⋅E[R]\\text{Cov}(PFS, R) = E[PFS \\cdot R] - E[PFS] \\cdot E[R] requires computing integrals copula-linked distributions, done numerically package.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Theoretical Background","text":"Fleischer, F., Gaschler-Markefski, B., & Bluhmki, E. (2009). statistical model dependence progression-free survival overall survival. Statistics Medicine, 28(21), 2669-2686. Trivedi, P. K., & Zimmer, D. M. (2005). Copula modeling: introduction practitioners. Foundations Trends Econometrics, 1(1), 1-111. Nelsen, R. B. (2006). introduction copulas (2nd ed.). Springer. Hofert, M., Kojadinovic, ., Maechler, M., & Yan, J. (2018). Elements copula modeling R. Springer. Joe, H. (2014). Dependence modeling copulas. CRC Press.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/articles/theoretical-background.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Theoretical Background","text":"vignette provided mathematical foundation : Fleischer model OS PFS Copula-based dependence modeling (Clayton Frank) Correlation bounds based Fréchet-Hoeffding bounds Data generation algorithms Validation metrics Understanding concepts helps users: - Choose appropriate parameter values - Interpret simulation results - Validate model assumptions - Extend methodology","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gosuke Homma. Author, maintainer.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Homma G (2025). CorOncoEndpoints: Generate Correlated Oncology Endpoints Clinical Trial Simulations. R package version 0.1.0, https://github.com/gosukehommaEX/CorOncoEndpoints.","code":"@Manual{,   title = {CorOncoEndpoints: Generate Correlated Oncology Endpoints for Clinical Trial Simulations},   author = {Gosuke Homma},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/gosukehommaEX/CorOncoEndpoints}, }"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"coroncoendpoints","dir":"","previous_headings":"","what":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"R package generating correlated oncology endpoints (OS, PFS, Response) clinical trial simulations. Documentation: Visit pkgdown website comprehensive documentation.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"CorOncoEndpoints package provides comprehensive set functions generate correlated oncology endpoints appropriate constraints correlation structures using copula models. package particularly useful simulation studies oncology clinical trials multiple endpoints need modeled realistic dependencies. 📚 Visit documentation website detailed guides examples.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"key-features","dir":"","previous_headings":"Overview","what":"Key Features","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Flexible Endpoint Generation: Generate OS , PFS , Response , combination endpoints Copula-Based Correlation: Support Clayton Frank copulas model dependence structures Appropriate Constraints: Automatically ensures PFS ≤ OS endpoints generated Multi-Group Support: Generate data multiple treatment groups simultaneously Validation Tools: Built-functions validate simulation results theoretical values Correlation Bounds: Calculate feasible correlation ranges based Fréchet-Hoeffding bounds","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"can install development version GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"gosukehommaEX/CorOncoEndpoints\")"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"documentation-and-vignettes","dir":"","previous_headings":"","what":"Documentation and Vignettes","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"📖 Comprehensive guides available pkgdown website Explore detailed vignettes: Introduction CorOncoEndpoints - Get started basic usage examples Advanced Usage Examples - Complex scenarios sensitivity analyses Theoretical Background - Mathematical foundations derivations can also access vignettes locally installation:","code":"# View vignette in R vignette(\"introduction\", package = \"CorOncoEndpoints\") vignette(\"advanced-usage\", package = \"CorOncoEndpoints\") vignette(\"theoretical-background\", package = \"CorOncoEndpoints\")  # List all available vignettes browseVignettes(\"CorOncoEndpoints\")"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"data-generation","dir":"","previous_headings":"Main Functions","what":"Data Generation","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Supports 7 different endpoint patterns Handles multiple treatment groups Ensures PFS ≤ OS constraint automatically","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"validation-and-analysis","dir":"","previous_headings":"Main Functions","what":"Validation and Analysis","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Calculates bias, relative bias, SE, MSE, RMSE Compares empirical estimates theoretical expectations","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"correlation-tools","dir":"","previous_headings":"Main Functions","what":"Correlation Tools","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Useful understanding implied correlations three endpoints generated Accounts hazard rates three-endpoint model Based Fréchet-Hoeffding bounds Depends response probability","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"copula-parameters","dir":"","previous_headings":"Main Functions","what":"Copula Parameters","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Converts correlation copula parameter (theta) Supports Clayton Frank copulas","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"example-1-generate-os-and-response-with-correlation","dir":"","previous_headings":"Usage Examples","what":"Example 1: Generate OS and Response with Correlation","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"","code":"library(CorOncoEndpoints)  set.seed(123) data1 <- rOncoEndpoints(   nsim = 100,   group = c(\"Treatment\", \"Control\"),   n = c(150, 150),   p = c(0.4, 0.3),   hazard_OS = c(0.05, 0.07),   rho_tte_resp = c(0.3, 0.2),   copula = \"Clayton\" )  head(data1)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"example-2-generate-all-three-endpoints-os-pfs-response","dir":"","previous_headings":"Usage Examples","what":"Example 2: Generate All Three Endpoints (OS, PFS, Response)","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"","code":"set.seed(456) data2 <- rOncoEndpoints(   nsim = 100,   group = c(\"Experimental\", \"Standard\"),   n = c(200, 200),   p = c(0.5, 0.35),   hazard_OS = c(0.04, 0.06),   hazard_PFS = c(0.08, 0.10),   rho_tte_resp = c(0.4, 0.25),   copula = \"Frank\" )  # Check correlation between OS and Response with(subset(data2, Group == \"Experimental\"), cor(OS, Response))  # Check correlation between PFS and Response (implied) with(subset(data2, Group == \"Experimental\"), cor(PFS, Response))  # Verify PFS <= OS constraint with(data2, all(PFS <= OS))  # Should be TRUE"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"example-3-validate-simulation-results","dir":"","previous_headings":"Usage Examples","what":"Example 3: Validate Simulation Results","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"","code":"set.seed(789) sim_data <- rOncoEndpoints(   nsim = 1000,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   p = c(0.4, 0.3),   hazard_OS = c(0.05, 0.07),   hazard_PFS = c(0.08, 0.10),   rho_tte_resp = c(0.3, 0.2),   copula = \"Clayton\" )  validation <- CheckSimResults(   dataset = sim_data,   p = c(Treatment = 0.4, Control = 0.3),   hazard_OS = c(Treatment = 0.05, Control = 0.07),   hazard_PFS = c(Treatment = 0.08, Control = 0.10),   rho_tte_resp = c(Treatment = 0.3, Control = 0.2),   copula = \"Clayton\" )  print(validation, n = Inf)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"example-4-calculate-correlation-bounds","dir":"","previous_headings":"Usage Examples","what":"Example 4: Calculate Correlation Bounds","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"","code":"# General TTE-Response bounds (depends only on p) CorBoundResponseTTE(p = 0.4)  # PFS-Response bounds in OS-PFS-Response framework CorBoundResponsePFS(   p = 0.4,   hazard_OS = 0.05,   hazard_PFS = 0.08 )  # Calculate implied PFS-Response correlation CorResponsePFS(   p = 0.4,   hazard_OS = 0.05,   hazard_PFS = 0.08,   rho_OS_Response = 0.3,   copula = \"Clayton\" )"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"example-5-calculate-copula-parameters","dir":"","previous_headings":"Usage Examples","what":"Example 5: Calculate Copula Parameters","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"","code":"# Calculate theta for Clayton copula theta_clayton <- CopulaParamResponseTTE(   p = 0.4,   rho = 0.3,   copula = \"Clayton\" )  # Calculate theta for Frank copula theta_frank <- CopulaParamResponseTTE(   p = 0.4,   rho = 0.3,   copula = \"Frank\" )  cat(\"Clayton theta:\", theta_clayton, \"\\n\") cat(\"Frank theta:\", theta_frank, \"\\n\")"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"supported-endpoint-patterns","dir":"","previous_headings":"","what":"Supported Endpoint Patterns","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"rOncoEndpoints() function supports seven different patterns: OS : Generate overall survival data PFS : Generate progression-free survival data Response : Generate binary response data OS + Response: Correlated OS Response PFS + Response: Correlated PFS Response OS + PFS: Correlated OS PFS (PFS ≤ OS) OS + PFS + Response: three endpoints correlated (PFS ≤ OS)","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"clayton-copula","dir":"","previous_headings":"Copula Families","what":"Clayton Copula","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Exhibits lower tail dependence model negative dependence (rho > 0 ) Good modeling positive associations survival data","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"frank-copula","dir":"","previous_headings":"Copula Families","what":"Frank Copula","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Flexible positive negative dependence Symmetric tail behavior Suitable wider range correlation structures","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"theoretical-background","dir":"","previous_headings":"","what":"Theoretical Background","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"package implements methods based : PFS = min(OS, TTP) TTP time progression Ensures PFS ≤ OS constraint automatically Clayton copula lower tail dependence Frank copula flexible symmetric dependence Determines feasible correlation ranges Accounts marginal distributions","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Fleischer, F., Gaschler-Markefski, B., & Bluhmki, E. (2009). statistical model dependence progression-free survival overall survival. Statistics Medicine, 28(21), 2669-2686. Trivedi, P. K., & Zimmer, D. M. (2005). Copula modeling: introduction practitioners. Foundations Trends Econometrics, 1(1), 1-111. Hofert, M., Kojadinovic, ., Maechler, M., & Yan, J. (2018). Elements copula modeling R. Springer. Nelsen, R. B. (2006). introduction copulas (2nd ed.). Springer.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"use package research, please cite:","code":"Homma, G. (2025). CorOncoEndpoints: Generate Correlated Oncology Endpoints for Clinical Trial Simulations. R package version 0.1.0. https://github.com/gosukehommaEX/CorOncoEndpoints"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"MIT License","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Contributions welcome! Please feel free submit Pull Request. contributing, please check: - documentation - Open issues","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"encounter problems suggestions, please file issue : https://github.com/gosukehommaEX/CorOncoEndpoints/issues","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"CorOncoEndpoints • Generate Correlated Oncology Endpoints","text":"Gosuke Homma","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Gosuke Homma Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Simulation Results Against Theoretical Values — CheckSimResults","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"Compares empirical simulation results rOncoEndpoints corresponding theoretical values. function calculates standard performance metrics (Bias, Relative Bias, SE, MSE, RMSE) validating simulation implementations assessing accuracy proposed random number generation method.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"","code":"CheckSimResults(   dataset,   p = NULL,   hazard_OS = NULL,   hazard_PFS = NULL,   rho_tte_resp = NULL,   copula = NULL )"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"dataset data frame. output rOncoEndpoints containing simulated endpoint data columns simID, Group, endpoint variables (OS, PFS, /Response). p Named numeric vector NULL. true probabilities binary response endpoint group. Names must match group names dataset. Required Response endpoint present. Example: c(Treatment = 0.4, Control = 0.3) hazard_OS Named numeric vector NULL. hazard rates OS group. Names must match group names dataset. Required OS endpoint present. Example: c(Treatment = 0.05, Control = 0.07) hazard_PFS Named numeric vector NULL. hazard rates PFS group. Names must match group names dataset. Required PFS endpoint present. Example: c(Treatment = 0.08, Control = 0.10) rho_tte_resp Named numeric vector NULL. specified correlations TTE Response group. Names must match group names dataset. Required TTE Response endpoints present. Example: c(Treatment = 0.3, Control = 0.2) copula Character NULL. copula family used modeling dependence. Options \"Clayton\" \"Frank\". Required TTE Response endpoints present.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"tibble following columns: Group Treatment group name Endpoint Name endpoint statistic Empirical Mean estimates across simulations Theoretical Expected theoretical value Bias Bias = Empirical - Theoretical (signed difference showing direction systematic error) Relative_Bias Relative bias percentage: 100 × Bias / Theoretical. Positive values indicate overestimation, negative values indicate underestimation SE Empirical standard error (SD estimates across simulations) MSE Mean squared error = Bias² + SE² RMSE Root mean squared error = √MSE (overall accuracy original scale) Assessment Quick interpretation: \"Excellent\" (|Relative_Bias| < 5%), \"Acceptable\" (5% ≤ |Relative_Bias| < 10%), \"Review\" (|Relative_Bias| ≥ 10%)","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"function calculates empirical theoretical values : Time--event endpoints (OS/PFS): Mean: Empirical vs 1/hazard Median: Empirical vs log(2)/hazard Binary endpoint (Response): Proportion: Empirical vs p Correlations: Corr(OS, Response): Empirical vs rho_tte_resp (specified) Corr(PFS, Response): Empirical vs value calculated CorResponsePFS Corr(OS, PFS): Empirical vs hazard_OS / hazard_PFS (Fleischer model) Performance metrics: Bias: Measures systematic error. close 0 unbiased methods. Sign indicates direction: positive = overestimation, negative = underestimation Relative Bias (%): Bias relative true value. Recommended interpretation: <5% excellent, <10% acceptable SE (Standard Error): Measures variability estimates. Decreases √nsim. Smaller better MSE: Combines bias variance single metric. Smaller better RMSE: MSE original scale. Directly comparable SE Assessment: Automatic interpretation based relative bias function particularly useful : Validating rOncoEndpoints correctly implements models Demonstrating unbiasedness proposed method publication Checking sufficient simulations run (SE small) Understanding relationship parameters resulting correlations Quality control simulation studies","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"Interpretation guidelines: Bias close 0: Method unbiased (desirable publication) Relative Bias < 5%: Excellent performance Relative Bias < 10%: Acceptable performance Small SE: Stable estimates (increase nsim reduce SE) RMSE ≈ SE Bias ≈ 0: Indicates unbiased estimator Correlations typically show higher variability (larger SE/RMSE) means/medians, especially smaller sample sizes publication: Report Bias Relative Bias demonstrate unbiasedness Report SE show precision Report MSE RMSE overall accuracy Typical table format: Group | Endpoint | Theoretical | Empirical | Bias | Relative Bias (%) | SE | RMSE | Assessment","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"Fleischer, F., Gaschler-Markefski, B., & Bluhmki, E. (2009). statistical model dependence progression-free survival overall survival. Statistics Medicine, 28(21), 2669-2686.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CheckSimResults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Simulation Results Against Theoretical Values — CheckSimResults","text":"","code":"# Example 1: OS and Response with Clayton copula set.seed(123) sim_data1 <- rOncoEndpoints(   nsim = 1000,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   p = c(0.4, 0.3),   hazard_OS = c(0.05, 0.07),   rho_tte_resp = c(0.3, 0.2),   copula = \"Clayton\" )  check1 <- CheckSimResults(   dataset = sim_data1,   p = c(Treatment = 0.4, Control = 0.3),   hazard_OS = c(Treatment = 0.05, Control = 0.07),   rho_tte_resp = c(Treatment = 0.3, Control = 0.2),   copula = \"Clayton\" ) print(check1, n = Inf) #> # A tibble: 8 × 10 #>   Group     Endpoint Empirical Theoretical     Bias Relative_Bias     SE     MSE #>   <chr>     <chr>        <dbl>       <dbl>    <dbl>         <dbl>  <dbl>   <dbl> #> 1 Treatment OS_Mean     20.0         20    -4.56e-2     -0.228    1.94   3.76    #> 2 Treatment OS_Medi…    13.9         13.9   1.73e-2      0.125    1.95   3.81    #> 3 Treatment Response     0.400        0.4   2.00e-5      0.00500  0.0488 0.00238 #> 4 Treatment Cor_OS_…     0.300        0.3   2.54e-6      0.000847 0.0936 0.00875 #> 5 Control   OS_Mean     14.4         14.3   6.90e-2      0.483    1.42   2.01    #> 6 Control   OS_Medi…     9.96         9.90  6.00e-2      0.606    1.42   2.03    #> 7 Control   Response     0.300        0.3   1.70e-4      0.0567   0.0457 0.00209 #> 8 Control   Cor_OS_…     0.205        0.2   4.61e-3      2.30     0.0993 0.00988 #> # ℹ 2 more variables: RMSE <dbl>, Assessment <chr>  # Interpretation: # - Bias close to 0: method is unbiased # - Relative_Bias < 5%: excellent performance # - Small SE: precise estimates # - RMSE ≈ SE when Bias ≈ 0: confirms unbiasedness  # Example 2: All three endpoints (OS, PFS, Response) with Frank copula set.seed(456) sim_data2 <- rOncoEndpoints(   nsim = 1000,   group = c(\"Experimental\", \"Standard\"),   n = c(150, 150),   p = c(0.5, 0.35),   hazard_OS = c(0.04, 0.06),   hazard_PFS = c(0.08, 0.10),   rho_tte_resp = c(0.4, 0.25),   copula = \"Frank\" )  check2 <- CheckSimResults(   dataset = sim_data2,   p = c(Experimental = 0.5, Standard = 0.35),   hazard_OS = c(Experimental = 0.04, Standard = 0.06),   hazard_PFS = c(Experimental = 0.08, Standard = 0.10),   rho_tte_resp = c(Experimental = 0.4, Standard = 0.25),   copula = \"Frank\" ) print(check2, n = Inf) #> # A tibble: 16 × 10 #>    Group     Endpoint Empirical Theoretical    Bias Relative_Bias     SE     MSE #>    <chr>     <chr>        <dbl>       <dbl>   <dbl>         <dbl>  <dbl>   <dbl> #>  1 Experime… OS_Mean     25.2        25     1.53e-1       0.613   2.07   4.31    #>  2 Experime… OS_Medi…    17.4        17.3   6.68e-2       0.385   2.07   4.29    #>  3 Experime… PFS_Mean    12.5        12.5   2.57e-2       0.205   0.995  0.990   #>  4 Experime… PFS_Med…     8.72        8.66  5.32e-2       0.614   1.03   1.07    #>  5 Experime… Response     0.502       0.5   1.63e-3       0.327   0.0404 0.00163 #>  6 Experime… Cor_OS_…     0.502       0.5   2.08e-3       0.415   0.0847 0.00719 #>  7 Experime… Cor_OS_…     0.403       0.4   3.48e-3       0.869   0.0643 0.00414 #>  8 Experime… Cor_PFS…     0.274       0.271 2.95e-3       1.09    0.0718 0.00516 #>  9 Standard  OS_Mean     16.7        16.7   4.84e-4       0.00291 1.42   2.01    #> 10 Standard  OS_Medi…    11.6        11.6   7.90e-2       0.684   1.40   1.97    #> 11 Standard  PFS_Mean    10.0        10     2.97e-3       0.0297  0.833  0.695   #> 12 Standard  PFS_Med…     6.96        6.93  2.39e-2       0.345   0.801  0.643   #> 13 Standard  Response     0.351       0.35  1.07e-3       0.307   0.0386 0.00149 #> 14 Standard  Cor_OS_…     0.603       0.6   3.10e-3       0.516   0.0810 0.00657 #> 15 Standard  Cor_OS_…     0.258       0.25  8.23e-3       3.29    0.0777 0.00611 #> 16 Standard  Cor_PFS…     0.190       0.184 6.12e-3       3.33    0.0833 0.00698 #> # ℹ 2 more variables: RMSE <dbl>, Assessment <chr>  # Note: PFS-Response correlation theoretical values are calculated # using CorResponsePFS function, demonstrating the consistency # of the three-endpoint model"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"Computes copula association parameter (theta) corresponds specified correlation coefficient binary response endpoint time--event (TTE) endpoint. function solves theta using relationship correlation coefficient copula function via numerical integration secant method.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"","code":"CopulaParamResponseTTE(p, rho, copula = \"Clayton\")"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"p Numeric. true probability binary response endpoint. Must 0 1 (exclusive). rho Numeric. desired correlation coefficient response TTE endpoints. Must within feasible range determined Fréchet-Hoeffding bounds given p. copula Character. copula family use. Options \"Clayton\" \"Frank\" (default \"Clayton\").","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"numeric value representing association parameter theta achieves specified correlation rho.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"function calculates copula association parameter theta solving equation relates correlation coefficient copula function: $$\\rho = \\sqrt{\\frac{1-p}{p}} \\left[1 + \\frac{1}{1-p} \\int_0^1 \\log(1-u) \\cdot c_y(u, 1-p; \\theta) \\, du\\right]$$ \\(c_y(u, v; \\theta) = \\frac{\\partial C(u, v; \\theta)}{\\partial u}\\) first partial derivative copula function C respect first argument. Clayton copula: $$C(u_1, u_2; \\theta) = (u_1^{-\\theta} + u_2^{-\\theta} - 1)^{-1/\\theta}$$ Parameter range: θ ∈ (0, ∞) model negative dependence Exhibits strong lower tail dependence θ → 0: independence; θ → ∞: Fréchet upper bound Frank copula: $$C(u_1, u_2; \\theta) = -\\frac{1}{\\theta} \\log\\left[1 + \\frac{(e^{-\\theta u_1} - 1)(e^{-\\theta u_2} - 1)}{e^{-\\theta} - 1}\\right]$$ Parameter range: θ ∈ (-∞, ∞) Can model positive negative dependence Exhibits symmetric tail dependence θ → -∞: Fréchet lower bound; θ = 0: independence; θ → ∞: Fréchet upper bound function first checks whether specified rho within feasible range using CorBoundResponseTTE. uses secant method iteratively solve theta. secant method uses linear interpolation two points find objective function crosses zero.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"correlation binary response endpoint exponentially distributed TTE endpoint depends response probability p copula parameter theta, hazard rate TTE endpoint. hazard rate affects scale TTE variable, correlation structure determined copula response probability. secant method algorithm: Start two initial values theta_0 theta_1 (adaptively chosen based rho) Evaluate objective function points: f_0 = f(theta_0), f_1 = f(theta_1) Find next approximation using linear interpolation: theta_new = theta_1 - f_1 * (theta_1 - theta_0) / (f_1 - f_0) Check convergence (either |f_new| |theta_new - theta_1| small) converged, update: theta_0 <- theta_1, theta_1 <- theta_new, repeat","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"Trivedi, P. K., & Zimmer, D. M. (2005). Copula modeling: introduction practitioners. Foundations Trends Econometrics, 1(1), 1-111. Hofert, M., Kojadinovic, ., Maechler, M., & Yan, J. (2018). Elements copula modeling R. Springer. Burden, R. L., & Faires, J. D. (2010). Numerical Analysis (9th ed.). Brooks/Cole.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CopulaParamResponseTTE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Association Parameter for Copulas Between Response and Time-to-Event Endpoints — CopulaParamResponseTTE","text":"","code":"# Clayton copula with positive correlation CopulaParamResponseTTE(p = 0.4, rho = 0.3, copula = \"Clayton\") #> [1] 1.069004  # Frank copula with positive correlation CopulaParamResponseTTE(p = 0.4, rho = 0.3, copula = \"Frank\") #> [1] 2.598995  # Frank copula with negative correlation CopulaParamResponseTTE(p = 0.4, rho = -0.2, copula = \"Frank\") #> [1] -1.732853  # Compare theta values across different copulas for the same correlation rho_target <- 0.3 theta_clayton <- CopulaParamResponseTTE(p = 0.4, rho = rho_target,                                           copula = \"Clayton\") theta_frank <- CopulaParamResponseTTE(p = 0.4, rho = rho_target,                                         copula = \"Frank\") cat(\"Clayton theta:\", theta_clayton, \"\\nFrank theta:\", theta_frank, \"\\n\") #> Clayton theta: 1.069004  #> Frank theta: 2.598995   # Explore relationship between correlation and theta for different p values rho_seq <- seq(0.1, 0.5, by = 0.1) theta_p40 <- sapply(rho_seq, function(r) {   CopulaParamResponseTTE(p = 0.4, rho = r, copula = \"Clayton\") }) theta_p60 <- sapply(rho_seq, function(r) {   CopulaParamResponseTTE(p = 0.6, rho = r, copula = \"Clayton\") })  plot(rho_seq, theta_p40, type = \"b\", col = \"blue\",      xlab = \"Correlation\", ylab = \"Theta\",      main = \"Clayton Copula: Correlation vs Theta\",      ylim = range(c(theta_p40, theta_p60))) lines(rho_seq, theta_p60, type = \"b\", col = \"red\") legend(\"topleft\", legend = c(\"p = 0.4\", \"p = 0.6\"),         col = c(\"blue\", \"red\"), lty = 1, pch = 1)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"Computes lower upper bounds correlation coefficient binary response endpoint progression-free survival (PFS) specific context three endpoints (OS, PFS, Response) modeled together using Fleischer model. Unlike CorBoundResponseTTE, provides general bounds depend response probability, function provides bounds depend response probability hazard rates OS PFS.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"","code":"CorBoundResponsePFS(p, hazard_OS, hazard_PFS)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"p Numeric. true probability binary response endpoint. Must 0 1 (exclusive). hazard_OS Numeric. hazard rate overall survival (OS). Must positive. hazard_PFS Numeric. hazard rate progression-free survival (PFS). Must positive strictly greater hazard_OS ensure PFS <= OS.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"numeric vector length 2 containing: First element: Lower bound (maximum negative dependence) Second element: Upper bound (maximum positive dependence)","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"function calculates correlation bounds specific setting : OS ~ Exp(hazard_OS) TTP (time progression) ~ Exp(hazard_TTP) hazard_TTP = hazard_PFS - hazard_OS PFS = min(OS, TTP) ~ Exp(hazard_PFS) (Fleischer model) Response binary endpoint probability p Response correlated OS (directly PFS) correlation bounds derived using Fréchet-Hoeffding copula bounds: $$\\sqrt{\\frac{1-p}{p}} \\frac{\\lambda_{OS}}{\\lambda_{TTP}} \\left[(1-p)^{\\lambda_{TTP}/\\lambda_{OS}} - 1\\right] \\leq \\text{Corr}(PFS, Response) \\leq \\sqrt{\\frac{p}{1-p}} \\frac{\\lambda_{OS}}{\\lambda_{TTP}} \\left[1 - p^{\\lambda_{TTP}/\\lambda_{OS}}\\right]$$ \\(\\lambda_{TTP} = \\lambda_{PFS} - \\lambda_{OS}\\). Key differences CorBoundResponseTTE: CorBoundResponseTTE: General bounds TTE-Response correlation, depends p (hazard-independent) CorBoundResponsePFS: Specific bounds PFS-Response correlation OS-PFS-Response framework, depends p hazard rates bounds depend hazard rates PFS defined min(OS, TTP), correlation PFS Response induced correlation OS Response combined stochastic relationship PFS = min(OS, TTP).","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"Important distinctions: generating TTE + Response (e.g., OS + Response PFS + Response), use CorBoundResponseTTE determine feasible correlations generating OS + PFS + Response together, correlation PFS Response directly specified emerges : - specified correlation OS Response - Fleischer model relationship PFS = min(OS, TTP) function calculates range possible correlations PFS Response given structural constraints three-endpoint model bounds achieved : Lower bound: Countermonotonic copula \\(C(u,v) = \\max\\{u+v-1, 0\\}\\) OS Response Upper bound: Comonotonic copula \\(C(u,v) = \\min\\{u, v\\}\\) OS Response Interpretation hazard ratio effects: hazard_PFS >> hazard_OS (patients progress death), correlation bounds become narrower approach zero hazard_PFS ≈ hazard_OS (progressions death), bounds approach CorBoundResponseTTE","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"Fleischer, F., Gaschler-Markefski, B., & Bluhmki, E. (2009). statistical model dependence progression-free survival overall survival. Statistics Medicine, 28(21), 2669-2686.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponsePFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Correlation Bounds Between Response and PFS in OS-PFS-Response Framework — CorBoundResponsePFS","text":"","code":"# Example 1: Calculate bounds for typical oncology trial parameters # Median OS = 30 months, Median PFS = 18 months, Response rate = 40% CorBoundResponsePFS(   p = 0.4,   hazard_OS = log(2) / 30,   hazard_PFS = log(2) / 18 ) #> [1] -0.5302313  0.5598511  # Example 2: Compare with general TTE-Response bounds p <- 0.4 hazard_OS <- log(2) / 30 hazard_PFS <- log(2) / 18  # General bounds (OS-Response or PFS-Response alone) general_bounds <- CorBoundResponseTTE(p = p) cat(\"General TTE-Response bounds:\", general_bounds, \"\\n\") #> General TTE-Response bounds: -0.6256311 0.7481482   # Specific bounds (PFS-Response in OS-PFS-Response framework) pfs_bounds <- CorBoundResponsePFS(p = p, hazard_OS = hazard_OS, hazard_PFS = hazard_PFS) cat(\"PFS-Response bounds (3-endpoint):\", pfs_bounds, \"\\n\") #> PFS-Response bounds (3-endpoint): -0.5302313 0.5598511   # Note: PFS-Response bounds are typically narrower than general bounds  # Example 3: Effect of hazard ratio on bounds p <- 0.5 hazard_OS <- 0.04  # Different PFS hazard rates (different hazard ratios) hazard_PFS_vec <- c(0.06, 0.08, 0.10, 0.12)  results <- sapply(hazard_PFS_vec, function(h_pfs) {   CorBoundResponsePFS(p = p, hazard_OS = hazard_OS, hazard_PFS = h_pfs) })  # Plot the effect of hazard ratio hazard_ratio <- hazard_PFS_vec / hazard_OS plot(hazard_ratio, results[2, ], type = \"b\", col = \"blue\",      ylim = range(results), xlab = \"Hazard Ratio (PFS/OS)\",      ylab = \"Correlation Bound\", main = \"Effect of Hazard Ratio on PFS-Response Bounds\") lines(hazard_ratio, results[1, ], type = \"b\", col = \"red\") legend(\"topright\", legend = c(\"Upper Bound\", \"Lower Bound\"),        col = c(\"blue\", \"red\"), lty = 1, pch = 1) abline(h = 0, lty = 2, col = \"gray\")   # Example 4: Extreme case - when hazard_PFS >> hazard_OS # (PFS is much shorter than OS, i.e., most patients progress before death) CorBoundResponsePFS(   p = 0.6,   hazard_OS = 0.02,   hazard_PFS = 0.20  # PFS hazard is 10x larger ) #> [1] -0.09069806  0.13471136 # Bounds are narrower, indicating weaker possible correlation  # Example 5: Demonstrating the bounds narrow as hazard ratio increases p <- 0.4 hazard_OS <- 0.05 hazard_ratio_seq <- seq(1.1, 5, by = 0.1)  bounds_matrix <- sapply(hazard_ratio_seq, function(hr) {   CorBoundResponsePFS(p, hazard_OS, hazard_OS * hr) })  plot(hazard_ratio_seq, bounds_matrix[2, ] - bounds_matrix[1, ],       type = \"l\", lwd = 2,      xlab = \"Hazard Ratio (PFS/OS)\",       ylab = \"Bounds Width (Upper - Lower)\",      main = \"Correlation Bounds Width vs Hazard Ratio\") grid()"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"Computes lower upper bounds correlation coefficient binary response endpoint time--event (TTE) endpoint. bounds derived using Fréchet-Hoeffding copula bounds depend response probability, hazard rate TTE endpoint.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"","code":"CorBoundResponseTTE(p)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"p Numeric. true probability binary response endpoint. Must 0 1 (exclusive).","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"numeric vector length 2 containing: First element: Lower bound (maximum negative dependence) Second element: Upper bound (maximum positive dependence)","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"Fréchet-Hoeffding bounds provide theoretical limits correlation binary response endpoint (e.g., objective response) exponentially distributed TTE endpoint (e.g., overall survival progression-free survival). correlation bounds given : $$\\log(1-p)\\sqrt{\\frac{1-p}{p}} \\leq \\text{Corr}(TTE, Response) \\leq \\log\\left(\\frac{1}{p}\\right)\\sqrt{\\frac{p}{1-p}}$$ Key properties: bounds depend p, TTE hazard rate Lower bound: achieved countermonotonic copula \\(C(u,v) = \\max\\{u+v-1, 0\\}\\) Upper bound: achieved comonotonic copula \\(C(u,v) = \\min\\{u, v\\}\\) bounds symmetric: p replaced 1-p, lower upper bounds swap negated signs Maximum absolute bound value approximately 0.805 occurs p ≈ 0.203 (upper bound) p ≈ 0.797 (lower bound). fundamental property Fréchet-Hoeffding bounds correlations binary continuous exponential variables.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"independence correlation bounds hazard rate interesting theoretical result. hazard rate determines scale TTE endpoint, affect range achievable correlations binary response endpoint. occurs hazard rate affects scaling TTE variable, binary response endpoint determined solely probability p.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"Trivedi, P. K., & Zimmer, D. M. (2005). Copula modeling: introduction practitioners. Foundations Trends Econometrics, 1(1), 1-111.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorBoundResponseTTE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Correlation Bounds Between Response and Time-to-Event Endpoints — CorBoundResponseTTE","text":"","code":"# Calculate bounds with response probability = 0.4 CorBoundResponseTTE(p = 0.4) #> [1] -0.6256311  0.7481482  # Example with higher response rate CorBoundResponseTTE(p = 0.6) #> [1] -0.7481482  0.6256311  # Example with lower response rate CorBoundResponseTTE(p = 0.2) #> [1] -0.4462871  0.8047190  # Example with intermediate values bounds <- CorBoundResponseTTE(p = 0.35) cat(\"Lower bound:\", bounds[1], \"\\nUpper bound:\", bounds[2], \"\\n\") #> Lower bound: -0.5870582  #> Upper bound: 0.7703588   # Demonstrating the effect of response probability on bounds # The bounds are widest around p ≈ 0.203 and p ≈ 0.797 CorBoundResponseTTE(p = 0.203) #> [1] -0.4495901  0.8047423 CorBoundResponseTTE(p = 0.5) #> [1] -0.6931472  0.6931472 CorBoundResponseTTE(p = 0.797) #> [1] -0.8047423  0.4495901  # Demonstrating symmetry property CorBoundResponseTTE(p = 0.3) #> [1] -0.5448300  0.7881852 -rev(CorBoundResponseTTE(p = 0.7))  # Should be nearly identical #> [1] -0.5448300  0.7881852  # Find maximum absolute bound p_seq <- seq(0.01, 0.99, by = 0.001) bounds_upper <- sapply(p_seq, function(p) CorBoundResponseTTE(p)[2]) max_bound_idx <- which.max(bounds_upper) cat(\"Maximum upper bound:\", round(bounds_upper[max_bound_idx], 4),     \"at p =\", round(p_seq[max_bound_idx], 3), \"\\n\") #> Maximum upper bound: 0.8047 at p = 0.203"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"Calculates correlation coefficient binary response endpoint progression-free survival (PFS) specific context three endpoints (OS, PFS, Response) modeled together using Fleischer model copula-based dependence. Given user-specified correlation OS Response, function predicts resulting correlation PFS Response.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"","code":"CorResponsePFS(p, hazard_OS, hazard_PFS, rho_OS_Response, copula)"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"p Numeric. true probability binary response endpoint. Must 0 1 (exclusive). hazard_OS Numeric. hazard rate overall survival (OS). Must positive. hazard_PFS Numeric. hazard rate progression-free survival (PFS). Must positive strictly greater hazard_OS ensure PFS <= OS. rho_OS_Response Numeric. desired correlation coefficient OS Response. Must within feasible range determined Fréchet-Hoeffding bounds given p. copula Character. copula family use modeling dependence OS Response. Options \"Clayton\" \"Frank\".","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"numeric value representing correlation coefficient PFS Response.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"function designed specific setting : OS ~ Exp(hazard_OS) TTP (time progression) ~ Exp(hazard_TTP) hazard_TTP = hazard_PFS - hazard_OS PFS = min(OS, TTP) ~ Exp(hazard_PFS) (Fleischer model) Response correlated OS via specified copula correlation rho_OS_Response calculation proceeds three steps: Calculate copula parameter theta specified rho_OS_Response using CopulaParamResponseTTE Define first partial derivative copula function cy(u, v; theta) Calculate Corr(PFS, Response) using formula: $$\\text{Corr}(PFS, Response) = \\sqrt{\\frac{1-p}{p}} \\frac{1}{\\lambda_{TTP}} \\left[\\frac{\\lambda_{PFS}}{1-p} \\int_0^1 c_y(u, 1-p; \\theta) (1-u)^{\\lambda_{TTP}/\\lambda_{OS}} du - \\lambda_{OS}\\right]$$ \\(\\lambda_{TTP} = \\lambda_{PFS} - \\lambda_{OS}\\) \\(c_y(u, v; \\theta) = \\frac{\\partial C(u, v; \\theta)}{\\partial u}\\) first partial derivative copula function. Key insight: generating OS + PFS + Response simultaneously, users specify correlation OS Response. correlation PFS Response automatically determined model structure. function calculates resulting correlation .","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"Practical usage: rOncoEndpoints, three endpoints generated, users specify rho_tte_resp represents correlation OS Response correlation PFS Response specified emerges model structure function predicts PFS-Response correlation , useful : - Trial design planning - Understanding correlation structure among three endpoints - Sensitivity analyses - Power calculations involving PFS Copula families: Clayton copula: Exhibits lower tail dependence, model negative dependence Frank copula: Flexible positive negative dependence symmetric tail behavior Numerical considerations: function uses numerical integration may less accurate extreme parameter combinations (e.g., large hazard ratios) Warnings issued hazard ratios extreme integration encounters difficulties","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"Fleischer, F., Gaschler-Markefski, B., & Bluhmki, E. (2009). statistical model dependence progression-free survival overall survival. Statistics Medicine, 28(21), 2669-2686. Trivedi, P. K., & Zimmer, D. M. (2005). Copula modeling: introduction practitioners. Foundations Trends Econometrics, 1(1), 1-111.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/CorResponsePFS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Correlation Between Response and PFS in OS-PFS-Response Framework — CorResponsePFS","text":"","code":"# Example 1: Calculate PFS-Response correlation given OS-Response correlation # Median OS = 30 months, Median PFS = 18 months # Response rate = 40%, OS-Response correlation = 0.3 rho_pfs_resp <- CorResponsePFS(   p = 0.4,   hazard_OS = log(2) / 30,   hazard_PFS = log(2) / 18,   rho_OS_Response = 0.3,   copula = \"Clayton\" ) cat(\"PFS-Response correlation:\", rho_pfs_resp, \"\\n\") #> PFS-Response correlation: 0.2378192   # Example 2: Compare correlations for different copulas p <- 0.5 hazard_OS <- 0.04 hazard_PFS <- 0.08 rho_OS <- 0.25  rho_pfs_clayton <- CorResponsePFS(p, hazard_OS, hazard_PFS, rho_OS, \"Clayton\") rho_pfs_frank <- CorResponsePFS(p, hazard_OS, hazard_PFS, rho_OS, \"Frank\")  cat(\"Clayton copula - PFS-Response correlation:\", rho_pfs_clayton, \"\\n\") #> Clayton copula - PFS-Response correlation: 0.1869128  cat(\"Frank copula - PFS-Response correlation:\", rho_pfs_frank, \"\\n\") #> Frank copula - PFS-Response correlation: 0.1676352   # Example 3: Sensitivity analysis - how does PFS-Response correlation # change with different OS-Response correlations? p <- 0.4 hazard_OS <- log(2) / 30 hazard_PFS <- log(2) / 18  # Calculate feasible range for OS-Response correlation rho_bounds <- CorBoundResponseTTE(p = p)  # For Clayton copula: use only positive correlations rho_OS_seq <- seq(0.05, rho_bounds[2] - 0.05, length.out = 10)  # Calculate corresponding PFS-Response correlations rho_PFS_seq <- sapply(rho_OS_seq, function(rho) {   CorResponsePFS(p, hazard_OS, hazard_PFS, rho, copula = \"Clayton\") })  # Plot the relationship plot(rho_OS_seq, rho_PFS_seq, type = \"b\",      xlab = \"Correlation: OS-Response\",      ylab = \"Correlation: PFS-Response\",      main = \"Relationship between OS-Response and PFS-Response Correlations\",      ylim = range(c(rho_OS_seq, rho_PFS_seq))) abline(a = 0, b = 1, lty = 2, col = \"gray\")  # Identity line legend(\"topleft\",         legend = c(\"PFS-Response\", \"Identity line (for reference)\"),        lty = c(1, 2), col = c(\"black\", \"gray\"), pch = c(1, NA))   # Example 4: Effect of hazard ratio on PFS-Response correlation # Fix OS-Response correlation, vary PFS hazard p <- 0.5 hazard_OS <- 0.04 rho_OS <- 0.3 hazard_PFS_vec <- seq(0.06, 0.15, by = 0.01)  rho_PFS_vec <- sapply(hazard_PFS_vec, function(h_pfs) {   CorResponsePFS(p, hazard_OS, h_pfs, rho_OS, copula = \"Clayton\") })  # Plot hazard_ratio <- hazard_PFS_vec / hazard_OS plot(hazard_ratio, rho_PFS_vec, type = \"b\",      xlab = \"Hazard Ratio (PFS/OS)\",      ylab = \"Correlation\",      main = \"Effect of Hazard Ratio on PFS-Response Correlation\",      ylim = range(c(rho_PFS_vec, rho_OS))) abline(h = rho_OS, lty = 2, col = \"red\", lwd = 2) legend(\"topright\",        legend = c(\"PFS-Response correlation\",                    paste0(\"OS-Response correlation (\", rho_OS, \")\")),        lty = c(1, 2), col = c(\"black\", \"red\"), pch = c(1, NA), lwd = c(1, 2))   # Example 5: Verify calculated correlation matches simulation if (FALSE) { # \\dontrun{ set.seed(123) p <- 0.4 hazard_OS <- 0.05 hazard_PFS <- 0.08 rho_OS_Response <- 0.3  # Predict PFS-Response correlation predicted_rho <- CorResponsePFS(   p, hazard_OS, hazard_PFS, rho_OS_Response, copula = \"Clayton\" )  # Generate data and calculate empirical correlation data <- rOncoEndpoints(   nsim = 1000,   n = 500,   p = p,   hazard_OS = hazard_OS,   hazard_PFS = hazard_PFS,   rho_tte_resp = rho_OS_Response,   copula = \"Clayton\" )  empirical_rho <- cor(data$PFS, data$Response)  cat(\"Predicted PFS-Response correlation:\", predicted_rho, \"\\n\") cat(\"Empirical PFS-Response correlation:\", empirical_rho, \"\\n\") cat(\"Difference:\", abs(predicted_rho - empirical_rho), \"\\n\") } # }"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"unified function generates random samples oncology endpoints flexible configurations. function supports seven different patterns: OS PFS Response OS + Response (correlated) PFS + Response (correlated) OS + PFS (correlated, PFS <= OS constraint) OS + PFS + Response (correlated, PFS <= OS constraint) function designed specifically oncology clinical trial simulations, particularly generating objective response (Response), progression-free survival (PFS), overall survival (OS) data appropriate correlation structure.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"","code":"rOncoEndpoints(   nsim,   group = NULL,   n,   p = NULL,   hazard_OS = NULL,   hazard_PFS = NULL,   rho_tte_resp = NULL,   copula = NULL )"},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"nsim Integer. number simulations perform. Must positive integer. group Character vector. Names treatment groups. NULL (default), groups named \"Group1\", \"Group2\", etc. Length must match lengths vector parameters. n Integer vector. Sample sizes group. elements must positive integers. Length must match number groups. p Numeric vector NULL. Marginal probabilities objective response group. NULL, Response endpoint generated. provided, elements must 0 1 (exclusive). Length must match number groups. Default NULL. hazard_OS Numeric vector NULL. Hazard rates OS group. NULL, OS endpoint generated. provided, elements must positive. Length must match number groups. Default NULL. hazard_PFS Numeric vector NULL. Hazard rates PFS group. NULL, PFS endpoint generated. provided, elements must positive. hazard_OS hazard_PFS provided, hazard_PFS must strictly greater hazard_OS ensure PFS <= OS. Length must match number groups. Default NULL. rho_tte_resp Numeric vector NULL. Desired correlation coefficients time--event endpoint Response. Required TTE endpoint (OS PFS) p provided. elements must within feasible range determined Fréchet-Hoeffding bounds (depend p, hazard rates). Length must match number groups. Default NULL. copula Character NULL. copula family use modeling dependence TTE Response. Options \"Clayton\" \"Frank\". Required p least one TTE endpoint provided (defaults \"Clayton\" specified). Default NULL.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"data frame nsim * sum(n) rows columns depending configuration: OS : simID, Group, OS PFS : simID, Group, PFS Response : simID, Group, Response OS + Response: simID, Group, OS, Response PFS + Response: simID, Group, PFS, Response OS + PFS: simID, Group, OS, PFS OS + PFS + Response: simID, Group, OS, PFS, Response","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"function provides seven modes operation based parameters provided: Single endpoint modes: OS (hazard_OS provided) PFS (hazard_PFS provided) Response (p provided) Two endpoint modes: OS + Response (hazard_OS + p): Correlated via copula specified rho_tte_resp. copula parameter determined solely p rho_tte_resp, independent hazard_OS. PFS + Response (hazard_PFS + p): Correlated via copula specified rho_tte_resp. copula parameter determined solely p rho_tte_resp, independent hazard_PFS. OS + PFS (hazard_OS + hazard_PFS): Correlated using Fleischer model, ensuring PFS <= OS. correlation directly determined hazard ratio: Corr(OS, PFS) = hazard_OS / hazard_PFS. Three endpoint mode: OS + PFS + Response (three provided): PFS <= OS constraint maintained using Fleischer model. Response endpoint correlated OS (PFS) via copula specified rho_tte_resp. copula parameter depends p rho_tte_resp.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"CRITICAL: Correlation structure three-endpoint mode (OS + PFS + Response): Response correlated OS via rho_tte_resp (user-specified) Response directly correlated PFS correlation PFS Response emerges automatically model structure user-specified predict resulting PFS-Response correlation, use CorResponsePFS specified parameters design reflects biological assumption response survival linked underlying disease process Important implementation details: correlation binary Response endpoint exponentially distributed TTE endpoint depends response probability (p) copula parameter, TTE hazard rate. key theoretical property simplifies correlation structure. feasible range correlations Response TTE endpoints determined Fréchet-Hoeffding bounds, depend p. OS-PFS relationship (Fleischer model), correlation directly determined ratio hazard rates. Copula selection: function uses copula-based methods model dependencies: Clayton copula: Suitable lower tail dependence (strong correlation low values). model negative dependence. Frank copula: Flexible positive negative dependence symmetric tail behavior.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"Fleischer, F., Gaschler-Markefski, B., & Bluhmki, E. (2009). statistical model dependence progression-free survival overall survival. Statistics Medicine, 28(21), 2669-2686. Trivedi, P. K., & Zimmer, D. M. (2005). Copula modeling: introduction practitioners. Foundations Trends Econometrics, 1(1), 1-111.","code":""},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/reference/rOncoEndpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Correlated Oncology Endpoints for Multiple Groups — rOncoEndpoints","text":"","code":"# Example 1: OS only set.seed(123) data1 <- rOncoEndpoints(   nsim = 100,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   hazard_OS = c(0.05, 0.07) ) head(data1) #>   simID     Group         OS #> 1     1 Treatment  6.7816835 #> 2     1 Treatment 31.0521872 #> 3     1 Treatment 10.5180043 #> 4     1 Treatment 42.9146021 #> 5     1 Treatment 56.4245855 #> 6     1 Treatment  0.9325366  # Example 2: Response only set.seed(456) data2 <- rOncoEndpoints(   nsim = 100,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   p = c(0.4, 0.3) ) head(data2) #>   simID     Group Response #> 1     1 Treatment        0 #> 2     1 Treatment        0 #> 3     1 Treatment        1 #> 4     1 Treatment        1 #> 5     1 Treatment        1 #> 6     1 Treatment        0  # Example 3: OS and Response with Clayton copula set.seed(789) data3 <- rOncoEndpoints(   nsim = 1000,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   p = c(0.4, 0.3),   hazard_OS = c(0.05, 0.07),   rho_tte_resp = c(0.3, 0.2),   copula = \"Clayton\" ) head(data3) #>   simID     Group         OS Response #> 1     1 Treatment 24.0724149        0 #> 2     1 Treatment  1.9632601        0 #> 3     1 Treatment  0.2391606        0 #> 4     1 Treatment 17.9104750        1 #> 5     1 Treatment 13.5513608        0 #> 6     1 Treatment  0.4073927        0  # Example 4: PFS and Response with Frank copula set.seed(101) data4 <- rOncoEndpoints(   nsim = 1000,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   p = c(0.5, 0.4),   hazard_PFS = c(0.08, 0.10),   rho_tte_resp = c(0.25, 0.15),   copula = \"Frank\" ) head(data4) #>   simID     Group        PFS Response #> 1     1 Treatment  5.8191381        1 #> 2     1 Treatment  0.5601767        0 #> 3     1 Treatment 15.4598170        0 #> 4     1 Treatment 13.4004960        1 #> 5     1 Treatment  3.5936215        0 #> 6     1 Treatment  4.4594160        1  # Example 5: OS and PFS (Fleischer model) # Correlation between OS and PFS = hazard_OS / hazard_PFS set.seed(112) data5 <- rOncoEndpoints(   nsim = 1000,   group = c(\"Treatment\", \"Control\"),   n = c(100, 100),   hazard_OS = c(log(2) / 20, log(2) / 16),   hazard_PFS = c(log(2) / 14, log(2) / 10) ) head(data5) #>   simID     Group         OS        PFS #> 1     1 Treatment  13.638756  13.638756 #> 2     1 Treatment  73.614834  73.614834 #> 3     1 Treatment 138.878055 138.878055 #> 4     1 Treatment 109.142065 109.142065 #> 5     1 Treatment   7.778338   7.778338 #> 6     1 Treatment   3.267516   3.267516 # Verify correlation with(subset(data5, Group == \"Treatment\"), cor(OS, PFS)) #> [1] 0.6970372  # Example 6: All three endpoints with Frank copula # IMPORTANT: Response is correlated with OS, not PFS! set.seed(131) data6 <- rOncoEndpoints(   nsim = 1000,   group = \"Experimental\",   n = 150,   p = 0.5,   hazard_OS = 0.04,   hazard_PFS = 0.06,   rho_tte_resp = 0.3,  # This is the correlation between OS and Response   copula = \"Frank\" ) head(data6) #>   simID        Group        OS       PFS Response #> 1     1 Experimental  5.780558  5.780558        0 #> 2     1 Experimental  3.336632  3.336632        0 #> 3     1 Experimental  8.677777  8.677777        1 #> 4     1 Experimental 11.781298 11.781298        0 #> 5     1 Experimental 46.826435 46.448680        1 #> 6     1 Experimental 18.833300 18.833300        0  # Verify correlations cat(\"OS-Response correlation:\", cor(data6$OS, data6$Response), \"\\n\") #> OS-Response correlation: 0.2976105  cat(\"PFS-Response correlation:\", cor(data6$PFS, data6$Response), \"\\n\") #> PFS-Response correlation: 0.2403529   # Predict PFS-Response correlation using CorResponsePFS predicted_cor <- CorResponsePFS(   p = 0.5,   hazard_OS = 0.04,   hazard_PFS = 0.06,   rho_OS_Response = 0.3,   copula = \"Frank\" ) cat(\"Predicted PFS-Response correlation:\", predicted_cor, \"\\n\") #> Predicted PFS-Response correlation: 0.2414616"},{"path":[]},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"CorOncoEndpoints 0.1.0","text":"first release CorOncoEndpoints package, providing comprehensive tools generating correlated oncology endpoints clinical trial simulations.","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/news/index.html","id":"main-features-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Main Features","title":"CorOncoEndpoints 0.1.0","text":"rOncoEndpoints(): Generate correlated OS, PFS, Response endpoints Support 7 different endpoint patterns (OS , PFS , Response , OS+Response, PFS+Response, OS+PFS, OS+PFS+Response) Multi-group support comparing multiple treatment arms Automatic enforcement PFS ≤ OS constraint Clayton copula (lower tail dependence, positive correlations ) Frank copula (flexible symmetric dependence, positive negative correlations) CheckSimResults(): Validate simulation results theoretical values Calculate bias, relative bias, SE, MSE, RMSE Compare empirical estimates theoretical expectations CorResponsePFS(): Calculate PFS-Response correlation OS-PFS-Response framework CorBoundResponsePFS(): Compute correlation bounds PFS-Response CorBoundResponseTTE(): Compute general correlation bounds TTE-Response CopulaParamResponseTTE(): Calculate copula parameters given correlations","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/news/index.html","id":"theoretical-framework-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Theoretical Framework","title":"CorOncoEndpoints 0.1.0","text":"Implementation Fleischer model (2009) OS-PFS dependency Fréchet-Hoeffding bounds correlation constraints Copula-based dependence modeling","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Documentation","title":"CorOncoEndpoints 0.1.0","text":"Comprehensive function documentation roxygen2 Multiple examples function Detailed usage guides README","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/news/index.html","id":"dependencies-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Dependencies","title":"CorOncoEndpoints 0.1.0","text":"R (>= 3.5.0) stats (base R) tibble","code":""},{"path":"https://gosukehommaEX.github.io/CorOncoEndpoints/news/index.html","id":"future-plans-0-1-0","dir":"Changelog","previous_headings":"","what":"Future Plans","title":"CorOncoEndpoints 0.1.0","text":"Add support additional copula families (Gumbel, Gaussian) Implement time--event endpoints censoring Add visualization functions correlation structures Extend handle complex trial designs","code":""}]
